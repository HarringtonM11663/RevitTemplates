{
  "$schema": "http://json.schemastore.org/template",
  "author": "Nice3point",
  "name": "Revit AddIn",
  "shortName": "revit-addin",
  "identity": "Nice3point.Revit.AddIn",
  "defaultName": "RevitAddIn",
  "sourceName": "Nice3point.Revit.AddIn",
  "description": "Template for creating a Revit add-in",
  "classifications": [
    "Revit",
    "AddIn",
    "Library"
  ],
  "tags": {
    "type": "project",
    "language": "C#",
    "platform": ".NET"
  },
  "preferNameDirectory": true,
  "placeholderFilename": "keep.folder",
  "guids": [
    "AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA"
  ],
  "symbols": {
    "ApplicationType": {
      "type": "parameter",
      "displayName": "Add-In type",
      "datatype": "choice",
      "description": "The type of add-in to be registered in the .addin manifest",
      "choices": [
        {
          "choice": "Application",
          "description": "Registers the add-in in the manifest with the Application type"
        },
        {
          "choice": "Command",
          "description": "Registers the add-in in the manifest with the Command type"
        }
      ],
      "defaultValue": "Application"
    },
    "CommandStyle": {
      "type": "computed",
      "value": "(ApplicationType == \"Command\")"
    },
    "ApplicationStyle": {
      "type": "computed",
      "value": "(ApplicationType == \"Application\")"
    },
    "WindowType": {
      "type": "parameter",
      "displayName": "User interface",
      "datatype": "choice",
      "description": "The type of window to be used by the add-in",
      "choices": [
        {
          "choice": "None",
          "description": "The add-in will not use windows"
        },
        {
          "choice": "Modal",
          "description": "A modal window that blocks Revit until the user closes the window"
        },
        {
          "choice": "Modeless",
          "description": "A modeless window does not block any other window while it is visible"
        }
      ],
      "defaultValue": "Modal"
    },
    "IocType": {
      "type": "parameter",
      "displayName": "IoC",
      "datatype": "choice",
      "description": "Supports the dependency injection (DI) software design pattern which is a technique for achieving Inversion of Control (IoC) between classes and their dependencies",
      "choices": [
        {
          "choice": "Disabled",
          "description": "The add-in will not use IoC"
        },
        {
          "choice": "Container",
          "displayName": "Service container",
          "description": "Use Microsoft.Extensions.DependencyInjection implementation"
        },
        {
          "choice": "Hosting",
          "description": "Use Microsoft.Extensions.Hosting implementation"
        }
      ],
      "defaultValue": "Disabled"
    },
    "Logger": {
      "type": "parameter",
      "displayName": "Serilog support",
      "dataType": "bool",
      "description": "Logging support for the add-in",
      "defaultValue": "false"
    },
    "NoWindow": {
      "type": "computed",
      "value": "(WindowType == \"None\")"
    },
    "ModalWindow": {
      "type": "computed",
      "value": "(WindowType == \"Modal\")"
    },
    "ModelessWindow": {
      "type": "computed",
      "value": "(WindowType == \"Modeless\")"
    },
    "ServicesContainer": {
      "type": "computed",
      "value": "(IocType == \"Container\")"
    },
    "Hosting": {
      "type": "computed",
      "value": "(IocType == \"Hosting\")"
    },
    "IOC": {
      "type": "computed",
      "value": "(IocType != \"Disabled\")"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(CommandStyle)",
          "exclude": [
            "Application.cs",
            "Resources/Icons/RibbonIcon16.png",
            "Resources/Icons/RibbonIcon32.png"
          ]
        },
        {
          "condition": "(NoWindow)",
          "exclude": [
            "Models/**",
            "Views/**",
            "ViewModels/**"
          ]
        },
        {
          "condition": "(!ModelessWindow)",
          "exclude": [
            "Utils/WindowController.cs"
          ]
        },
        {
          "condition": "(!IOC)",
          "exclude": [
            "Host.cs"
          ]
        },
        {
          "condition": "(!Logger || !IOC)",
          "exclude": [
            "Config/LoggerConfigurator.cs"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "condition": "(ApplicationStyle)",
      "path": "Application.cs"
    },
    {
      "condition": "(CommandStyle)",
      "path": "Commands/StartupCommand.cs"
    }
  ],
  "postActions": [
    {
      "condition": "(ApplicationStyle)",
      "description": "Opens Application.cs in the editor",
      "manualInstructions": [],
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args": {
        "files": "0"
      },
      "continueOnError": true
    },
    {
      "condition": "(CommandStyle)",
      "description": "Opens Command.cs in the editor",
      "manualInstructions": [],
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args": {
        "files": "0"
      },
      "continueOnError": true
    }
  ],
  "SpecialCustomOperations": {
    "**/*.addin": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [
              "#if"
            ],
            "actionableElse": [
              "#else"
            ],
            "actionableElseif": [
              "#elseif"
            ],
            "endif": [
              "#endif"
            ],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    }
  }
}